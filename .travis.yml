language: cpp
sudo: false
dist: trusty

cache:
  ccache: true
  apt: true

env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1
git:
  depth: 3

branches:
  except:
  - gh-pages

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &addons
        apt:
          sources: &sources
            - llvm-toolchain-trusty-3.9
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.9
            - clang-4.0
            - g++-5
            - g++-6
            #- g++-7
      env: COMPILER=clang++-3.9 BUILD_TYPE='Release' CXX=clang++-3.9 CC=clang-3.9

    - os: linux
      compiler: clang
      addons: *addons
      env: COMPILER=clang++-4.0 BUILD_TYPE='Release' CXX=clang++-4.0 CC=clang-4.0

    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: *addons
      env: COMPILER=g++-5 BUILD_TYPE='Release' CXX=g++-5 CC=gcc-5

    - os: linux
      compiler: gcc
      addons: *addons
      env: COMPILER=g++-6 BUILD_TYPE='Release' CXX=g++-6 CC=gcc-6

    #- os: linux
    #  compiler: gcc
    #  addons: *addons
    #  env: COMPILER=g++-7 BUILD_TYPE='Release' CXX=g++-7 CC=gcc-7

    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release' CXX=clang++-4.0 CC=clang-4.0

# taken from https://pythonhosted.org/CodeChat/.travis.yml.html
before_install: |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    #brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
  fi

install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.6/cmake-3.6.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi
  - travis_retry pip install pyopenssl ndg-httpsclient pyasn1
  - travis_retry pip install yasha
before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H../zacc -BBuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  - cd Build

script:
  - make -j 2 && make zacc.tests.all
  - ls
  - ./zacc.system.detect
  - ./zacc.tests.scalar
  - ./zacc.tests.sse.sse2
  - ./zacc.tests.sse.sse3
  - ./zacc.tests.sse.sse41
  - ./zacc.tests.sse.sse41.fma3
  - ./zacc.tests.sse.sse41.fma4
  - ./zacc.tests.avx
  - ./zacc.tests.avx2
  - ctest