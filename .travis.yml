language: generic

python: 3.6

cache:
  ccache: true

env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1
    - BUILD_SANITIZE_MEMORY=0
    - BUILD_DIR=Build
    - BUILD_TYPE='Release'
    - JOBS=2

git:
  depth: 1

branches:
  only:
    - master
    - develop
    - ci

# matrix:
#   include:
#     - os: linux
#       sudo: false
#       dist: xenial
#       addons:
#         apt:
#           sources:
#             - ubuntu-toolchain-r-test
#           packages:
#             - g++-6
#       env:
#         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

#     - os: linux
#       sudo: false
#       dist: xenial
#       addons:
#         apt:
#           sources:
#             - ubuntu-toolchain-r-test
#           packages:
#             - g++-7
#       env:
#         - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

#     - os: linux
#       sudo: false
#       dist: xenial
#       addons:
#         apt:
#           sources:
#             - ubuntu-toolchain-r-test
#           packages:
#             - clang-4.0
#       env:
#         - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

#     - os: linux
#       sudo: false
#       dist: xenial
#       addons:
#         apt:
#           sources:
#             - ubuntu-toolchain-r-test
#           packages:
#             - clang-5.0
#       env:
#         - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

#     - os: osx
#       osx_image: xcode9

#     - os: osx
#       osx_image: xcode9.4

#     - os: osx
#       osx_image: xcode10.1


before_install: &before_install
  - eval "${MATRIX_EVAL}"
  - export CC=${CC}
  - export CXX=${CXX}

install: &install
  - source ci/travis/install-$TRAVIS_OS_NAME.sh

build_script: &build_script
  script: ./ci/travis/run-build.sh

os_linux: &os_linux
  os: linux
  sudo: false
  dist: xenial
  addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
  env:
    - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"    
  <<: *before_install
  <<: *install
  <<: *build_script

os_osx: &os_osx
  os: osx
  <<: *install
  <<: *build_script




#before_script:
  #- cmake -H../zacc -B${BUILD_DIR} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_SANITIZE_MEMORY=${BUILD_SANITIZE_MEMORY} -DBUILD_DOCUMENTATION=${DOC_BUILDER}

# script:  
#   - cmake -H../zacc -B${BUILD_DIR} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DBUILD_SANITIZE_MEMORY=${BUILD_SANITIZE_MEMORY}

#   - cmake --build ${BUILD_DIR} --config ${BUILD_TYPE} --target zacc.system.info -- -j $JOBS
#   - cmake --build ${BUILD_DIR} --config ${BUILD_TYPE} --target zacc.tests.all -- -j $JOBS
#   - cmake --build ${BUILD_DIR} --config ${BUILD_TYPE} --target zacc.examples.mandelbrot -- -j $JOBS
#   - cmake --build ${BUILD_DIR} --config ${BUILD_TYPE} --target zacc.examples.julia -- -j $JOBS

#   - source ci/travis/run-test.sh

jobs:
  include: 
    - stage: build
      <<: *os_linux
      addons:
        apt:
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - stage: build
      <<: *os_linux
      addons:
        apt:
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - stage: build
      <<: *os_linux
      addons:
        apt:
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    - stage: build
      <<: *os_linux
      addons:
        apt:
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    
    - stage: build
      <<: *os_osx
      osx_image: xcode9

    - stage: build
      <<: *os_osx
      osx_image: xcode9.4

    - stage: build
      <<: *os_osx
      osx_image: xcode10.1

    - stage: documentation
      script: 
        - cmake --build ${BUILD_DIR} --target zacc.documentation


#after_success:
#  - ./ci/run-build-documentation.sh

#before_deploy:
#  - ./ci/run-pack-documentation.sh
#  - ./ci/run-pack-release.sh
#  - export RELEASES=$(ls ${TRAVIS_BUILD_DIR}/*.zip)

# deploy:
#   - provider: pages
#     skip-cleanup: true
#     github-token: $GITHUB_TOKEN
#     local-dir: ${TRAVIS_BUILD_DIR}/${BUILD_DIR}/docs/html
#     on:
#       branch: master
#       condition: "$DOC_BUILDER = 1"

#  - provider: releases
#    skip-cleanup: true
#    api_key: $GITHUB_TOKEN
#    #secure: "UGy0FpkUxiMw334ZMvCbreNCRbn1WuRyONTXJtAfGF2cX0HCJ/QHlqgwy5zBi+yUwi79IDtbb2Pr2tvObaK5WL/5NrTikdAoYebO0gzSSd2BIHmniyQsuHEzOciUC0AQxg4Q+TpZaKK8oTRS7NNMN+w7ks23fq7DH6aJOQtiBBHKLotNyKGVZeOgDcpzJD5F9pv39dbumQ9BsfmLn/PMgKHwppKp0E46DCSsSHYKr3XnZfC9SBZAAxICkSEQ1UPN3Dq8lUzry/yTXoLW77ftfK9sAqrCgti39oavJPsgbTEJ/pP0TugxjKwNTKGPdx19439sThsLVi0YQ3hu2vIHfiOUv/I9aN/JsJjkC+pO4kAItwAsVDfq3PVln2E03qn84jFUt8D1lhK36r49dj6bJ4KFXkY3Otr+FEHHE+pf0xugYVxQfbta7H0hTd3UsGrLMCGbzYB30fLKXRFDsGCpoCMcbnAAn3J7LixBMSFxiwZdcriNkbVTODMkOZehDooW6WDp4H1K0S/26Q5G3wjiy48Lwq0s6AbFR2tF33OiXQ00ysPOE36LSun+E278wympUe6BY7T0tzgCfMbivehNs9uyqGct4fDLMmjb4ak3NKnnV/ivORHFD6Gkrb4Uyq3iR2pEM854zjz+4fPI6uw6iZiDnceaox0KawCFMTKirn8="
#    file_glob: true
#    file: ${TRAVIS_BUILD_DIR}/${RELEASE_NAME}.zip
#    on:
#      branch: master
#      tags: true
#      condition: "$RELEASE_BUILDER = 1"
#
#  - provider: releases
#    skip-cleanup: true
#    api_key: $GITHUB_TOKEN
#    #  secure: "UGy0FpkUxiMw334ZMvCbreNCRbn1WuRyONTXJtAfGF2cX0HCJ/QHlqgwy5zBi+yUwi79IDtbb2Pr2tvObaK5WL/5NrTikdAoYebO0gzSSd2BIHmniyQsuHEzOciUC0AQxg4Q+TpZaKK8oTRS7NNMN+w7ks23fq7DH6aJOQtiBBHKLotNyKGVZeOgDcpzJD5F9pv39dbumQ9BsfmLn/PMgKHwppKp0E46DCSsSHYKr3XnZfC9SBZAAxICkSEQ1UPN3Dq8lUzry/yTXoLW77ftfK9sAqrCgti39oavJPsgbTEJ/pP0TugxjKwNTKGPdx19439sThsLVi0YQ3hu2vIHfiOUv/I9aN/JsJjkC+pO4kAItwAsVDfq3PVln2E03qn84jFUt8D1lhK36r49dj6bJ4KFXkY3Otr+FEHHE+pf0xugYVxQfbta7H0hTd3UsGrLMCGbzYB30fLKXRFDsGCpoCMcbnAAn3J7LixBMSFxiwZdcriNkbVTODMkOZehDooW6WDp4H1K0S/26Q5G3wjiy48Lwq0s6AbFR2tF33OiXQ00ysPOE36LSun+E278wympUe6BY7T0tzgCfMbivehNs9uyqGct4fDLMmjb4ak3NKnnV/ivORHFD6Gkrb4Uyq3iR2pEM854zjz+4fPI6uw6iZiDnceaox0KawCFMTKirn8="
#    file_glob: true
#    file: ${TRAVIS_BUILD_DIR}/${RELEASE_NAME}.zip
#    on:
#      branch: develop
#      condition: "$RELEASE_BUILDER = 1"