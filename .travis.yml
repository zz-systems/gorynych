language: generic

cache:
  ccache: true
  pip: true

addons: {apt: {sources: [ ubuntu-toolchain-r-test ]}}
env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1
    - BUILD_SANITIZE_MEMORY=0
    - BUILD_DIR=Build
    - BUILD_TYPE='Release'
    - JOBS=2
    - PATH=$HOME/.local/bin:$PATH

    - STAGE_NAME=$(echo "$TRAVIS_BUILD_STAGE_NAME" | tr '[:upper:]' '[:lower:]')
    - SCRIPT_BASE_DIR=${TRAVIS_BUILD_DIR}/ci/travis
    - SCRIPT_STAGE_DIR=${SCRIPT_BASE_DIR}/$STAGE_NAME
    - SCRIPT_SHARED_DIR=${SCRIPT_BASE_DIR}/shared

    - RELEASE_NAME=zacc.${TRAVIS_OS_NAME}

    - PKG_DIR=${TRAVIS_BUILD_DIR}/packages
    - SHARE_DIR=${TRAVIS_BUILD_DIR}/share

    - PYTHON=3.6 

git:
  depth: 1

branches:
  only:
    - master
    - develop
    - /^v.*$/

os_templates:
  - &linux
    os: linux
    dist: xenial

  - &linux_gcc6
    <<: *linux
    addons: { apt: { sources: [ ubuntu-toolchain-r-test ], packages: [g++-6] } }
    env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
  
  - &linux_gcc7
    <<: *linux
    addons: { apt: { sources: [ ubuntu-toolchain-r-test ], packages: [g++-7] }}
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

  - &linux_clang4
    <<: *linux
    addons: { apt: { sources: [ ubuntu-toolchain-r-test ], packages: [clang-4.0] }}
    env: MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

  - &linux_clang5
    <<: *linux
    addons: { apt: { sources: [ ubuntu-toolchain-r-test ], packages: [clang-5.0] }}
    env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

  - &osx_xcode9
    os: osx
    osx_image: xcode9

  - &osx_xcode94
    <<: *osx_xcode9
    osx_image: xcode9.4

  - &osx_xcode101
    <<: *osx_xcode9
    osx_image: xcode10.1

stage_templates:

  - &smoke_stage
    install: 
      - source ${SCRIPT_STAGE_DIR}/install.sh
    before_script: 
      - source ${SCRIPT_STAGE_DIR}/before_script.sh
    script: 
      - ${SCRIPT_STAGE_DIR}/script.sh
    after_success:
      - source ${SCRIPT_SHARED_DIR}/aws-init.sh
      - source ${SCRIPT_STAGE_DIR}/pack.sh
      - source ${SCRIPT_SHARED_DIR}/aws-sync.sh

  - &build_stage
    install: 
      - source ${SCRIPT_STAGE_DIR}/install.sh
    before_script: 
      - source ${SCRIPT_STAGE_DIR}/before_script.sh
    script: 
      - ${SCRIPT_STAGE_DIR}/script.sh

  - &deploy_stage      
    git:
      depth: 1
      submodules: false
    install: 
      - source ${SCRIPT_STAGE_DIR}/install.sh
    before_deploy:
      - source ${SCRIPT_SHARED_DIR}/aws-init.sh
      - source ${SCRIPT_SHARED_DIR}/aws-sync.sh
    after_deploy:
      - source ${SCRIPT_SHARED_DIR}/aws-clean.sh

  
stages:
  - smoke
  - test
  - deploy

jobs:
  include: 
    - stage: smoke
      <<: *linux_gcc7
      install: 
        - source ${SCRIPT_STAGE_DIR}/install.sh
      before_script:
        - source ${SCRIPT_STAGE_DIR}/before_script.sh
      script: 
        - ${SCRIPT_STAGE_DIR}/script.sh

    - stage: smoke
      <<: *linux_clang5
      install: 
        - source ${SCRIPT_STAGE_DIR}/install.sh
        - source ${SCRIPT_STAGE_DIR}/before_script.sh
      before_script: 
        - source ${SCRIPT_SHARED_DIR}/aws-init.sh
      script: 
        - ${SCRIPT_STAGE_DIR}/script.sh
        - cd $BUILD_DIR
        - cpack -P ${RELEASE_NAME} -G ZIP
        - cp ./${RELEASE_NAME}.zip ${SHARE_DIR}
      #after_success:                
        - source ${SCRIPT_SHARED_DIR}/aws-sync.sh

    - stage: smoke
      <<: *osx_xcode101
      install: 
        - source ${SCRIPT_STAGE_DIR}/install.sh
        - source ${SCRIPT_SHARED_DIR}/aws-init.sh
      before_script: 
        - source ${SCRIPT_STAGE_DIR}/before_script.sh
      script: 
        - ${SCRIPT_STAGE_DIR}/script.sh
        - cd $BUILD_DIR
        - cpack -P ${RELEASE_NAME} -G ZIP
        - cp ./${RELEASE_NAME}.zip ${SHARE_DIR} 
      #after_success:        
        - source ${SCRIPT_SHARED_DIR}/aws-sync.sh

    - stage: test
      <<: *linux_gcc6
      <<: *build_stage

    - stage: test
      <<: *linux_gcc7
      <<: *build_stage
      
    - stage: test
      <<: *linux_clang4
      <<: *build_stage

    - stage: test
      <<: *linux_clang5
      <<: *build_stage
    
    - stage: test
      <<: *osx_xcode9
      <<: *build_stage

    - stage: test
      <<: *osx_xcode94
      <<: *build_stage

    - stage: deploy
      <<: *linux
      <<: *deploy_stage
      deploy:
        - provider: releases
          skip-cleanup: true
          api_key: $GITHUB_TOKEN
          file_glob: true
          file: 
            - share/zacc.*.zip
          draft: true  
          on:
            all_branches: true
            tags: true