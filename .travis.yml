language: cpp
sudo: false
dist: trusty

cache:
  ccache: true
  apt: true

env:
  global:
    - USE_CCACHE=1
    - CCACHE_COMPRESS=1
    - CCACHE_MAXSIZE=200M
    - CCACHE_CPP2=1
git:
  depth: 3

branches:
  except:
  - gh-pages

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      compiler: clang
      addons: &addons
        apt:
          sources: &sources
            - llvm-toolchain-trusty-3.9
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-3.9
            - clang-4.0
            - g++-5
            - g++-6
            #- g++-7
      env: COMPILER=clang++-3.9 BUILD_TYPE='Release' CXX=clang++-3.9 CC=clang-3.9

    - os: linux
      compiler: clang
      addons: *addons
      env: COMPILER=clang++-4.0 BUILD_TYPE='Release' CXX=clang++-4.0 CC=clang-4.0

    # 2/ Linux GCC Builds
    - os: linux
      compiler: gcc
      addons: *addons
      env: COMPILER=g++-5 BUILD_TYPE='Release' CXX=g++-5 CC=gcc-5

    - os: linux
      compiler: gcc
      addons: *addons
      env: COMPILER=g++-6 BUILD_TYPE='Release' CXX=g++-6 CC=gcc-6

    #- os: linux
    #  compiler: gcc
    #  addons: *addons
    #  env: COMPILER=g++-7 BUILD_TYPE='Release' CXX=g++-7 CC=gcc-7

    # 3/ OSX Clang Builds
    - os: osx
      osx_image: xcode7.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release' CXX=clang++-4.0 CC=clang-4.0
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release' CXX=clang++-4.0 CC=clang-4.0


install:
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.6/cmake-3.6.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      sudo brew install cmake ccache
    fi
  - travis_retry pip install pyopenssl ndg-httpsclient pyasn1
  - travis_retry pip install yasha
before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H../zacc -BBuild -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  - cd Build

script:
  - make -j 2 && make zacc.tests.all
  - ls
  - ./zacc.system.detect
  - ./zacc.sse.sse2.tests
  - ./zacc.sse.sse2.tests
  - ./zacc.sse.sse3.tests
  - ./zacc.sse.sse41.tests
  - ./zacc.sse.sse41.fma3.tests
  - ./zacc.sse.sse41.fma4.tests
  - ./zacc.avx.tests
  - ./zacc.avx2.tests
  - ctest