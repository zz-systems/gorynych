cmake_minimum_required(VERSION 3.3.2)
#project(zacc VERSION 0.5.0)

include(GNUInstallDirs)

#include(cmake/zacc.shared.cmake)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

# include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
# include_directories(${CMAKE_CURRENT_SOURCE_DIR})

option(BUILD_TESTS "Build unit tests" OFF)
option(BUILD_EXAMPLES "Build examples" ON)

add_subdirectory(zacc)
# include branched code generation config
#add_subdirectory(codegen/backend)

# fetch dependencies
if(BUILD_EXAMPLES)
    include_directories(dependencies/CImg)
endif()

# if(BUILD_TESTS)
#     add_subdirectory(dependencies/googletest)
# endif()

# add codegen targets
#include(codegen/CMakeLists.txt)

# add app targets
#include(src/CMakeLists.txt)

# add test targets
# if(BUILD_TESTS)
#     enable_testing()
#     add_subdirectory(test)
# endif()

# add example targets
if(BUILD_EXAMPLES)
    add_subdirectory(examples)
endif()

# add_library(zacc INTERFACE)
# add_library(zacc::zacc ALIAS zacc)

# target_include_directories(zacc INTERFACE 
#     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
#     $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>)

# set(INSTALL_CONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/zacc)

# install(TARGETS zacc 
#     EXPORT zacc-targets
#     RUNTIME DESTINATION     "${CMAKE_INSTALL_BINDIR}"       COMPONENT bin
#     ARCHIVE DESTINATION     "${CMAKE_INSTALL_LIBDIR}"       COMPONENT lib
#     LIBRARY DESTINATION     "${CMAKE_INSTALL_LIBDIR}"       COMPONENT shlib
#     INCLUDES DESTINATION    "${CMAKE_INSTALL_INCLUDEDIR}"   COMPONENT dev)

# install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

# install(EXPORT zacc-targets
#     FILE zaccTargets.cmake
#     NAMESPACE zacc::
#     DESTINATION ${INSTALL_CONFIGDIR}
# )

# include(CMakePackageConfigHelpers)
# write_basic_package_version_file(
#     ${CMAKE_CURRENT_BINARY_DIR}/zaccConfigVersion.cmake
#     VERSION ${PROJECT_VERSION}
#     COMPATIBILITY AnyNewerVersion
# )

# configure_package_config_file(${CMAKE_CURRENT_LIST_DIR}/cmake/zaccConfig.cmake.in
#     ${CMAKE_CURRENT_BINARY_DIR}/zaccConfig.cmake
#     INSTALL_DESTINATION ${INSTALL_CONFIGDIR}
# )

# #Install the config, configversion and custom find modules
# install(FILES
#     ${CMAKE_CURRENT_BINARY_DIR}/zaccConfigVersion.cmake
#     ${CMAKE_CURRENT_BINARY_DIR}/zaccConfig.cmake
#     DESTINATION ${INSTALL_CONFIGDIR}
# )

# export(EXPORT zacc-targets FILE ${CMAKE_CURRENT_BINARY_DIR}/zaccTargets.cmake NAMESPACE zacc::)

# export(PACKAGE zacc)


# set(CPACK_PACKAGE_DESCRIPTION "PROJECT_NAME")
# set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
# set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
# set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")
# set(CPACK_PACKAGE_VENDOR "ZZ-SYSTEMS")
# set(CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")

# include(CPack)